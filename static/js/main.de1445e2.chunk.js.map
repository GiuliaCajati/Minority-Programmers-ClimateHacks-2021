{"version":3,"sources":["containers/ToggleContainer.js","components/Map.js","helpers/piedata.js","components/Piechart.js","containers/GraphContainer.js","containers/MapPage.js","App.js","index.js"],"names":["ToggleContainer","props","handleClick","toggle","setAcresToggle","acresToggle","durationToggle","setDurationToggle","setCauseToggle","causeToggle","setOngoingToggle","ongoingToggle","className","id","Button","onClick","color","variant","Map","setIcon","cause","determineCause","fire","irwin_FireCause","irwin_FireCauseGeneral","irwin_FireCauseSpecific","determineVegetation","irwin_PredominantFuelGroup","irwin_SecondaryFuelModel","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","fireData","map","size","acres","duration","resizeIcon","fireIcon","Icon","iconUrl","iconSize","irwin_InitialLatitude","irwin_InitialLongitude","Marker","icon","position","Popup","poly_IncidentName","irwin_POOCounty","irwin_POOState","slice","startDate","endDate","irwin_TotalIncidentPersonnel","irwin_POOLandownerKind","OBJECTID","getAverageAcres","data","object","i","length","poly_Acres_AutoCalc","array","key","push","name","value","getTotalFires","renderCustomizedLabel","x","y","fill","textAnchor","dominantBaseline","toFixed","COLORS","Piechart","PieChart","width","height","Pie","labelLine","label","outerRadius","dataKey","nameKey","entry","index","Cell","GraphContainer","Grid","container","item","xs","useStyles","makeStyles","theme","typography","padding","spacing","MapPage","React","useState","checked","setChecked","anchorEl","setAnchorEl","open","Boolean","undefined","filter","event","prev","currentTarget","Popover","anchorReference","anchorPosition","top","left","onClose","anchorOrigin","vertical","horizontal","transformOrigin","hide","opacity","visibility","zIndex","App","setData","useEffect","fetch","then","json","handleResponse","response","fires","features","attributes","forEach","Date","irwin_FireDiscoveryDateTime","toLocaleDateString","irwin_FireOutDateTime","Math","ceil","now","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de1445e2.chunk.js","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button';\n\nconst ToggleContainer = (props) => {\n\n    const handleClick = (toggle) => {\n        switch(toggle) {\n            case \"acres\": \n                props.setAcresToggle(!props.acresToggle)\n                if (props.durationToggle) {\n                    props.setDurationToggle(!props.durationToggle)\n                }\n                break\n            case \"duration\":\n                props.setDurationToggle(!props.durationToggle)\n                if (props.acresToggle) {\n                    props.setAcresToggle(!props.acresToggle)\n                }\n                break\n            case \"cause\":\n                props.setCauseToggle(!props.causeToggle)\n                break\n            case \"ongoing\":\n                props.setOngoingToggle(!props.ongoingToggle)\n                break\n            default:\n                break\n        }\n    }\n\n    return (\n        <div className=\"map-element\" id=\"toggle-container\">\n            <Button \n                onClick={() => handleClick(\"acres\")}\n                color=\"secondary\" \n                variant={props.acresToggle ? \"contained\" : \"outlined\"}\n                className='map-filter-button'>\n                    Acres\n            </Button>\n            <Button \n                onClick={() => handleClick(\"duration\")}\n                color=\"secondary\" \n                variant={props.durationToggle ? \"contained\" : \"outlined\"} \n                className='map-filter-button'>\n                    Duration\n            </Button>\n            <Button \n                onClick={() => handleClick(\"cause\")}\n                color=\"secondary\" \n                variant={props.causeToggle ? \"contained\" : \"outlined\"}\n                className='map-filter-button'>\n                    Cause\n            </Button>\n            <Button \n                onClick={() => handleClick(\"ongoing\")}\n                color=\"secondary\" \n                variant={props.ongoingToggle ? \"contained\" : \"outlined\"} \n                className='map-filter-button'>\n                    Ongoing\n            </Button>\n        </div>\n    )\n}\n\nexport default ToggleContainer\n","import React from 'react'\nimport { Icon } from 'leaflet';\nimport { MapContainer, TileLayer, Marker, Popup  } from 'react-leaflet'\nimport { Switch } from 'react-router';\n\nconst Map = (props) => {\n    // const [ iconSize , setIconSize ] = useState([15, 15])\n    // const [ icon, setIcon ] = useState(\n    //   new Icon({\n    //   iconUrl:'https://i.imgur.com/F53W34b.png',\n    //   iconSize: iconSize\n    //   })\n    // )  \n\n\n    const resizeIcon = (fire) => {\n      if(props.acresToggle) {\n        if(fire.acres <= 10){\n          return 5\n        } else if(fire.acres <= 20){\n          return 10\n        } else if(fire.acres <= 100){\n          return 15\n        } else if(fire.acres <= 500){\n          return 20\n        } else if(fire.acres <= 1000){\n          return 30\n        }else{\n          return 60\n        }\n      } else if (props.durationToggle) {\n        if(fire.duration <= 10){\n          return 5\n        } else if(fire.duration <= 20){\n          return 10\n        } else if(fire.duration <= 30){\n          return 30\n        }else{\n          return 60\n        }\n      } \n      else {\n        return 20\n      }\n    }\n    const setIcon = (cause) => {\n      if(props.causeToggle) {\n         switch(cause){\n            case 'Human':\n              return 'https://i.imgur.com/mYKYRO2.png'\n            case 'Natural':\n              return 'https://i.imgur.com/04G71Br.png'\n            default:\n              return 'https://i.imgur.com/F53W34b.png'\n         } \n      }\n      else {\n        return 'https://i.imgur.com/F53W34b.png'\n      }\n    }\n\n\n    const determineCause = (fire) => {\n      if (fire.irwin_FireCause && !fire.irwin_FireCauseGeneral) {\n        return fire.irwin_FireCause\n      }\n      else if (fire.irwin_FireCause && fire.irwin_FireCauseGeneral && !fire.irwin_FireCauseSpecific) {\n        return `${fire.irwin_FireCause} (${fire.irwin_FireCauseGeneral})`\n      }\n      else {\n        if (fire.irwin_FireCauseGeneral === \"Other Human Cause\") {\n          return `${fire.irwin_FireCause} (${fire.irwin_FireCauseSpecific})`\n        }\n\n        switch(fire.irwin_FireCauseSpecific) {\n          case \"Motor Vehicle\":\n            return `${fire.irwin_FireCause} (${fire.irwin_FireCauseSpecific})`\n          default:\n            return `${fire.irwin_FireCause} (${fire.irwin_FireCauseGeneral}, ${fire.irwin_FireCauseSpecific})`\n        }\n      }\n    }\n\n    const determineVegetation = (fire) => {\n      if (fire.irwin_PredominantFuelGroup && !fire.irwin_SecondaryFuelModel) {\n        return fire.irwin_PredominantFuelGroup\n      }\n      else {\n        return `${fire.irwin_PredominantFuelGroup}, ${fire.irwin_SecondaryFuelModel}`\n      }\n    }\n\n    return (\n     \n    <MapContainer center={[40, -100]} zoom={5} scrollWheelZoom={true}>\n      <TileLayer\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n        {props.fireData.map(fire => {\n          const size = resizeIcon(fire)\n          //const size = resizeIcon(props.acresToggle?fire.acres:fire.duration)\n           const fireIcon = new Icon({\n            iconUrl: setIcon(fire.irwin_FireCause),\n            iconSize: [size, size]\n          })\n        if(fire.irwin_InitialLatitude === null || fire.irwin_InitialLongitude === null){\n          return null\n        }\n        return<Marker \n              icon = {fireIcon}\n              key = {fire.OBJECTID} \n              position={ [fire.irwin_InitialLatitude, fire.irwin_InitialLongitude ]}>\n          <Popup>\n            <p><b>{fire.poly_IncidentName}</b></p>\n            <ul>\n            <li>\n              <b>Location: </b> {fire.irwin_POOCounty}, {fire.irwin_POOState.slice(-2)}\n            </li>\n            <li>\n              <b>Date: </b>\n              {fire.startDate} - {fire.endDate} ({fire.duration} {fire.duration === 1 ? \"day\" : \"days\"})\n            </li>\n            <li>\n              <b>Acres Burned: </b> \n              {fire.acres}\n            </li>\n            <li>\n              <b>Cause: </b> \n              {determineCause(fire)}\n            </li>\n            {fire.irwin_PredominantFuelGroup\n              ?\n                <li>\n                  <b>Vegetation: </b>\n                  {determineVegetation(fire)}\n                </li>\n              :\n                null\n            }\n            {fire.irwin_TotalIncidentPersonnel\n              ?\n                <li>\n                  <b>Firefighters: </b>\n                  {fire.irwin_TotalIncidentPersonnel}\n                </li>\n              :\n                null\n            }\n            {fire.irwin_POOLandownerKind\n              ?\n                <li>\n                  <b>Property: </b> {fire.irwin_POOLandownerKind}\n                </li>\n              :\n                null\n            }\n            </ul>\n            \n          </Popup>\n        </Marker>\n      })}\n        \n    </MapContainer>\n        \n    )\n}\n\nexport default Map\n","export const getAverageAcres = (data) => {\n    let object = {}\n    \n    for(let i = 0; i < data.length; i++){\n      if(object[`${data[i].irwin_FireCause}`]){\n        object[`${data[i].irwin_FireCause}`][0] += 1\n        object[`${data[i].irwin_FireCause}`][1] += data[i].poly_Acres_AutoCalc\n      }\n      else{\n        object[`${data[i].irwin_FireCause}`] = [1, data[i].poly_Acres_AutoCalc]\n      }\n    }\n\n\n    let array = []\n    for(const key in object){\n      if(!(key === \"Undetermined\")){\n        object[key] = object[key][1] / object[key][0]\n        array.push({name: key, value: object[key]})\n      }\n    }\n\n    return array\n}\n\nexport const getTotalFires = (data) => {\n    let object = {}\n    \n    for(let i = 0; i < data.length; i++){\n      if(object[`${data[i].irwin_FireCause}`]){\n        object[`${data[i].irwin_FireCause}`] += 1\n      }\n      else{\n        object[`${data[i].irwin_FireCause}`] = 1\n      }\n    }\n\n\n    let array = []\n    for(const key in object){\n      if(!(key === \"Undetermined\")){\n        array.push({name: key, value: object[key]})\n      }\n    }\n\n    return array\n}\n\nexport const  renderCustomizedLabel = ({x, y, name, value}) => {\n    return (\n      <text x={x} y={y} fill=\"black\" textAnchor=\"start\" dominantBaseline=\"central\">\n        {name}: {value.toFixed(2)}\n      </text>\n    );\n  };","import React, { useEffect, useState } from 'react'\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { getAverageAcres, getTotalFires, renderCustomizedLabel} from '../helpers/piedata'\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nconst Piechart = (props) => {\n\n  return (\n    <PieChart width={400} height={400}>\n        {props.data ?\n        <Pie\n            data={props.data}\n            labelLine={true}\n            label={renderCustomizedLabel}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            nameKey=\"name\"\n        >\n            {props.data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n        </Pie> : null}\n    </PieChart> \n    )\n}\n\nexport default Piechart\n","import React, {useState} from 'react'\nimport Piechart from '../components/Piechart'\nimport { getAverageAcres, getTotalFires, renderCustomizedLabel} from '../helpers/piedata'\nimport { Grid } from '@material-ui/core'\n\nconst GraphContainer = ({data}) => {\n\n    return (\n        <div id=\"graph-page\">\n            {data ? \n                <Grid container className=\"graph-container\">\n                    <Grid item xs={3}>\n                        <Piechart data={getAverageAcres(data)} /> \n                    </Grid>\n                    <Grid item xs={3}>\n                        <Piechart data={getTotalFires(data)} />\n                    </Grid>\n                    <Grid item xs={3}>\n                        \n                    </Grid>\n                    <Grid item xs={3}>\n                        \n                    </Grid>\n                </Grid>\n            : null}\n        </div>\n    )\n}\n\nexport default GraphContainer\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Slide from '@material-ui/core/Slide';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\n\nimport ToggleContainer from './ToggleContainer.js'\n\nimport { Redirect } from 'react-router-dom';\n\nimport Map from '../components/Map.js'\nimport GraphContainer from './GraphContainer.js'\nimport Pie from '../components/Piechart.js'\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst MapPage = (props) => {\n  const classes = useStyles()\n  const [checked, setChecked] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [ acresToggle, setAcresToggle ] = useState(false)\n  const [ durationToggle, setDurationToggle ] = useState(false)\n  const [ causeToggle, setCauseToggle ] = useState(false)\n  const [ ongoingToggle, setOngoingToggle ] = useState(false)\n\n\n  const handleChange = (event) => {\n    setChecked((prev) => !prev);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n    return (\n\n      <div>\n            <Map\n                fireData={ongoingToggle?props.fireData.filter(data => data.endDate === 'present'):props.fireData}\n                acresToggle={acresToggle}\n                durationToggle={durationToggle}\n                causeToggle={causeToggle}\n            />\n\n          <Button className=\"graph-button\"\n            variant=\"contained\" \n            checked={checked}\n            onClick={handleChange}>\n                Graphs!!\n          </Button>\n\n          <Popover\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{ top: 600, left: 1250}}\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          {/* <Typography className={classes.typography}>The content of the Popover.</Typography>\n          */}\n          <GraphContainer data={props.fireData}/> \n        </Popover>\n\n        <ToggleContainer\n            acresToggle={acresToggle}\n            durationToggle={durationToggle}\n            causeToggle={causeToggle}\n            ongoingToggle={ongoingToggle}\n            setAcresToggle={setAcresToggle}\n            setDurationToggle={setDurationToggle}\n            setCauseToggle={setCauseToggle}\n            setOngoingToggle={setOngoingToggle}\n        />\n      </div>\n    );\n}\n\nexport default MapPage\n","import './App.css';\nimport { useEffect, useState } from 'react'\nimport MapPage from './containers/MapPage.js'\nimport GraphContainer from './containers/GraphContainer.js'\nimport PieChart from './components/Piechart.js'\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nlet url = 'https://services3.arcgis.com/T4QMspbfLg3qTGWY/arcgis/rest/services/Fire_History_Perimeters_Public/FeatureServer/0/query?where=1%3D1&outFields=OBJECTID,poly_IncidentName,irwin_DailyAcres,irwin_FireBehaviorGeneral1,irwin_FireCause,irwin_FireCauseGeneral,irwin_FireCauseSpecific,irwin_FireDiscoveryDateTime,irwin_FireMgmtComplexity,irwin_FireOutDateTime,irwin_IncidentTypeCategory,irwin_InitialLatitude,irwin_InitialLongitude,irwin_POOState,irwin_PredominantFuelGroup,irwin_SecondaryFuelModel,irwin_TotalIncidentPersonnel,poly_Acres_AutoCalc,irwin_FireBehaviorGeneral2,irwin_FireBehaviorGeneral3,irwin_POOCounty,irwin_POOLandownerKind,irwin_PrimaryFuelModel&returnGeometry=false&outSR=4326&f=json'\n\nconst useStyles = makeStyles(theme => ({\n  hide: {\n    opacity: 0, \n    visibility: \"hidden\", \n    zIndex: -1\n  }\n}))\n\nfunction App() {\n  const classes = useStyles()\n  const [ data, setData ] = useState([])\n\n  useEffect(() => {\n    fetch(url)\n    .then(data => data.json())\n    .then(handleResponse)\n  }, [])\n\n  const handleResponse = (response) => {\n    let fires = response.features.map(fire => fire.attributes)\n    fires.forEach(fire => {\n      fire.startDate = new Date(fire.irwin_FireDiscoveryDateTime).toLocaleDateString(\"en-US\")\n      fire.endDate = fire.irwin_FireOutDateTime\n        ?\n          new Date(fire.irwin_FireOutDateTime).toLocaleDateString(\"en-US\")\n        :\n          \"present\"\n      fire.duration = fire.irwin_FireOutDateTime\n        ?\n          Math.ceil((fire.irwin_FireOutDateTime - fire.irwin_FireDiscoveryDateTime) / (60*60*24*1000))\n        :\n          Math.ceil((Date.now() - fire.irwin_FireDiscoveryDateTime) / (60*60*24*1000))\n      fire.acres = fire.poly_Acres_AutoCalc.toFixed(2)\n      if (!fire.irwin_FireCause || fire.irwin_FireCause === \"Unknown\") {\n        fire.irwin_FireCause = \"Undetermined\"\n      }\n      if (fire.irwin_FireCauseSpecific === \"Other, Unknown\" || fire.irwin_FireCauseSpecific === \"Other, Known\") {\n        fire.irwin_FireCauseSpecific = null\n      }\n      if (fire.irwin_FireCauseGeneral === \"Debris/Open Burning\") {\n        fire.irwin_FireCauseGeneral = \"Open Burning\"\n      }\n      else if (fire.irwin_FireCauseGeneral === \"Other Human Cause\" && !fire.irwin_FireCauseSpecific) {\n        fire.irwin_FireCauseGeneral = null\n      }\n    })\n    setData(fires)\n  }\n\n\n\n  return (\n    <Router>\n      <div className=\"App\"> \n        <MapPage fireData={data} />\n        {/* <GraphContainer data={data}/>  */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n          <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}