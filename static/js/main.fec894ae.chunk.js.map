{"version":3,"sources":["containers/ToggleContainer.js","components/Map.js","assets/forestfire.png","components/About.js","helpers/piedata.js","components/Piechart.js","components/Barchart.js","helpers/bardata.js","containers/GraphContainer.js","components/GraphOverlay.js","containers/MapPage.js","App.js","index.js"],"names":["ToggleContainer","props","handleClick","toggle","setAcresToggle","acresToggle","durationToggle","setDurationToggle","setCauseToggle","causeToggle","setOngoingToggle","ongoingToggle","className","id","Tooltip","title","Button","onClick","color","variant","Map","setIcon","cause","determineCause","fire","irwin_FireCause","irwin_FireCauseGeneral","irwin_FireCauseSpecific","determineVegetation","irwin_PredominantFuelGroup","irwin_SecondaryFuelModel","MapContainer","maxBounds","center","zoom","scrollWheelZoom","maxZoom","minZoom","TileLayer","attribution","url","fireData","map","size","acres","duration","resizeIcon","fireIcon","Icon","iconUrl","iconSize","irwin_InitialLatitude","irwin_InitialLongitude","Marker","icon","position","Popup","style","fontSize","textAlign","poly_IncidentName","irwin_POOCounty","irwin_POOState","slice","startDate","endDate","irwin_TotalIncidentPersonnel","irwin_POOLandownerKind","OBJECTID","About","openToggle","classes","toggleInfo","setToggleInfoClose","Popover","infoBox","open","onClose","anchorOrigin","verticle","horizontal","transformOrigin","vertical","width","padding","src","Logo","logo","fontFamily","href","target","getAverageAcres","data","object","i","length","poly_Acres_AutoCalc","array","key","push","name","value","getTotalFires","renderCustomizedLabel","x","y","fill","textAnchor","dominantBaseline","toFixed","COLORS","Piechart","PieChart","height","Pie","labelLine","label","outerRadius","dataKey","nameKey","entry","index","Cell","Barchart","type","BarChart","interval","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","tickSize","tick","YAxis","Bar","barSize","category","getAcres","PrimaryFuel","Acres","getDuration","Duration","parseFloat","GraphContainer","Grid","container","item","xs","Paper","elevation","Typography","xaxis","GraphOverlay","anchorEl","handleClose","anchorReference","anchorPosition","useStyles","makeStyles","theme","typography","spacing","MapPage","useState","checked","setChecked","setAnchorEl","setToggleInfo","Boolean","undefined","filter","event","prev","currentTarget","App","setData","useEffect","fetch","then","json","handleResponse","response","fires","features","attributes","forEach","Date","irwin_FireDiscoveryDateTime","toLocaleDateString","irwin_FireOutDateTime","Math","ceil","now","ReactDOM","render","document","getElementById"],"mappings":"yPAyEeA,EArES,SAACC,GAErB,IAAMC,EAAc,SAACC,GACjB,OAAOA,GACH,IAAK,QACDF,EAAMG,gBAAgBH,EAAMI,aACxBJ,EAAMK,gBACNL,EAAMM,mBAAmBN,EAAMK,gBAEnC,MACJ,IAAK,WACDL,EAAMM,mBAAmBN,EAAMK,gBAC3BL,EAAMI,aACNJ,EAAMG,gBAAgBH,EAAMI,aAEhC,MACJ,IAAK,QACDJ,EAAMO,gBAAgBP,EAAMQ,aAC5B,MACJ,IAAK,UACDR,EAAMS,kBAAkBT,EAAMU,iBAO1C,OACI,sBAAKC,UAAU,cAAcC,GAAG,mBAAhC,UACI,cAACC,EAAA,EAAD,CAASC,MAAM,iEAAf,SACI,cAACC,EAAA,EAAD,CACIC,QAAS,kBAAMf,EAAY,UAC3BgB,MAAM,YACNC,QAASlB,EAAMI,YAAc,YAAc,WAC3CO,UAAU,oBAJd,qBAQJ,cAACE,EAAA,EAAD,CAASC,MAAM,+DAAf,SACI,cAACC,EAAA,EAAD,CACIC,QAAS,kBAAMf,EAAY,aAC3BgB,MAAM,YACNC,QAASlB,EAAMK,eAAiB,YAAc,WAC9CM,UAAU,oBAJd,wBAQJ,cAACE,EAAA,EAAD,CAASC,MAAM,iFAAf,SACI,cAACC,EAAA,EAAD,CACIC,QAAS,kBAAMf,EAAY,UAC3BgB,MAAM,YACNC,QAASlB,EAAMQ,YAAc,YAAc,WAC3CG,UAAU,oBAJd,qBAQJ,cAACE,EAAA,EAAD,CAASC,MAAM,2BAAf,SACI,cAACC,EAAA,EAAD,CACIC,QAAS,kBAAMf,EAAY,YAC3BgB,MAAM,YACNC,QAASlB,EAAMU,cAAgB,YAAc,WAC7CC,UAAU,oBAJd,2B,4CCsHDQ,EA/KH,SAACnB,GAET,IAwCMoB,EAAU,SAACC,GACf,IAAGrB,EAAMQ,YAWP,MAAO,kCAVN,OAAOa,GACJ,IAAK,QACH,MAAO,kCACT,IAAK,UACH,MAAO,kCACT,QACE,MAAO,oCASXC,EAAiB,SAACC,GACtB,GAAIA,EAAKC,kBAAoBD,EAAKE,uBAChC,OAAOF,EAAKC,gBAET,GAAID,EAAKC,iBAAmBD,EAAKE,yBAA2BF,EAAKG,wBACpE,MAAM,GAAN,OAAUH,EAAKC,gBAAf,aAAmCD,EAAKE,uBAAxC,KAGA,GAAoC,sBAAhCF,EAAKE,uBACP,MAAM,GAAN,OAAUF,EAAKC,gBAAf,aAAmCD,EAAKG,wBAAxC,KAGF,OAAOH,EAAKG,yBACV,IAAK,gBACH,MAAM,GAAN,OAAUH,EAAKC,gBAAf,aAAmCD,EAAKG,wBAAxC,KACF,QACE,MAAM,GAAN,OAAUH,EAAKC,gBAAf,aAAmCD,EAAKE,uBAAxC,aAAmEF,EAAKG,wBAAxE,OAKFC,EAAsB,SAACJ,GAC3B,OAAIA,EAAKK,6BAA+BL,EAAKM,yBACpCN,EAAKK,2BAGN,GAAN,OAAUL,EAAKK,2BAAf,aAA8CL,EAAKM,2BASvD,OAEA,eAACC,EAAA,EAAD,CACEC,UATkB,CAClB,CAAC,IAAK,KACN,CAAC,IAAK,KAQNC,OAAQ,CAAC,IAAK,KACdC,KAAM,EACNC,iBAAiB,EACjBC,QAAS,GACTC,QAAS,EANX,UAOE,cAACC,EAAA,EAAD,CACAC,YAAY,yEACZC,IAAI,uDAEDvC,EAAMwC,SAASC,KAAI,SAAAlB,GAClB,IAAMmB,EA1GO,SAACnB,GAClB,GAAGvB,EAAMI,YACP,QAAO,GACL,KAAKmB,EAAKoB,OAAS,EACjB,OAAO,GACT,KAAKpB,EAAKoB,OAAS,GACjB,OAAO,GACT,KAAKpB,EAAKoB,OAAS,IACjB,OAAO,GACT,KAAKpB,EAAKoB,OAAS,IACjB,OAAO,GACT,KAAKpB,EAAKoB,OAAS,IACjB,OAAO,GACT,KAAKpB,EAAKoB,OAAS,IACjB,OAAO,GACT,QACE,OAAO,QAEN,KAAI3C,EAAMK,eAmBf,OAAO,GAlBP,QAAO,GACL,KAAKkB,EAAKqB,UAAY,EACpB,OAAO,GACT,KAAKrB,EAAKqB,UAAY,GACpB,OAAO,GACT,KAAKrB,EAAKqB,UAAY,GACpB,OAAO,GACT,KAAKrB,EAAKqB,UAAY,GACpB,OAAO,GACT,KAAKrB,EAAKqB,UAAY,IACpB,OAAO,GACT,KAAKrB,EAAKqB,UAAY,IACpB,OAAO,GACT,QACE,OAAO,KAyEIC,CAAWtB,GACjBuB,EAAW,IAAIC,OAAK,CACzBC,QAAS5B,EAAQG,EAAKC,iBACtByB,SAAU,CAACP,EAAMA,KAErB,OAAkC,OAA/BnB,EAAK2B,uBAAkE,OAAhC3B,EAAK4B,uBACtC,KAEH,cAACC,EAAA,EAAD,CACAC,KAAQP,EAERQ,SAAW,CAAC/B,EAAK2B,sBAAuB3B,EAAK4B,wBAH7C,SAIJ,eAACI,EAAA,EAAD,CAAO5C,UAAU,aAAjB,UACE,mBAAG6C,MAAO,CAACC,SAAU,OAAQC,UAAW,SAAUzC,MAAO,WAAzD,SAAqE,4BAAIM,EAAKoC,sBAC9E,qBAAIH,MAAO,CAACC,SAAU,QAAtB,UACA,+BACE,2CADF,IACqBlC,EAAKqC,gBAD1B,KAC6CrC,EAAKsC,eAAeC,OAAO,MAExE,+BACE,uCACCvC,EAAKwC,UAFR,MAEsBxC,EAAKyC,QAF3B,KAEsCzC,EAAKqB,SAF3C,IAEwE,IAAlBrB,EAAKqB,SAAiB,MAAQ,OAFpF,OAIA,+BACE,+CACCrB,EAAKoB,SAER,+BACE,wCACCrB,EAAeC,MAEjBA,EAAKK,2BAEF,+BACE,6CACCD,EAAoBJ,MAGvB,KAEHA,EAAK0C,6BAEF,+BACE,+CACC1C,EAAK0C,gCAGR,KAEH1C,EAAK2C,uBAEF,+BACE,2CADF,IACqB3C,EAAK2C,0BAG1B,YA5CK3C,EAAK4C,iBC1HX,MAA0B,uC,SCmD1BC,EA9CD,SAAC,GAA4D,IAA3DC,EAA0D,EAA1DA,WAAYC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,mBAC7C,OACI,cAACC,EAAA,EAAD,CACI9D,UAAW2D,EAAQI,QACnBC,KAAMN,EACNE,WAAYA,EACZK,QAASJ,EACTK,aAAc,CACZC,SAAU,MACVC,WAAY,UAEdC,gBAAiB,CACfC,SAAU,MACVF,WAAY,UAXlB,SAeI,qBAAKvB,MAAO,CAAC0B,MAAO,MAAOC,QAAS,QAApC,SAEA,mCACE,qBAAKC,IAAKC,EAAM1E,UAAW2D,EAAQgB,OACnC,oBAAG9B,MAAO,CAAC+B,WAAY,SAAU9B,SAAU,QAA3C,UACA,yFACA,mBAAG+B,KAAK,+HAA+HC,OAAO,SAA9I,SACA,iDAFA,8EAI6E,6CAJ7E,SAIsG,8CAJtG,gLAIuS,2CAJvS,khBAMA,ueAGA,mBAAGD,KAAK,kCAAkCC,OAAO,YAAjD,kDACA,uBACA,mBAAGD,KAAK,wCAAwCC,OAAO,cAAvD,0CACA,uBACA,mBAAGD,KAAK,6EAA6EC,OAAO,iBAA5F,+CACA,uBACA,mBAAGD,KAAK,4BAA4BC,OAAO,kBAA3C,uD,2BC1CDC,EAAkB,SAACC,GAG5B,IAFA,IAAIC,EAAS,GAELC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC3BD,EAAO,GAAD,OAAID,EAAKE,GAAGrE,mBACnBoE,EAAO,GAAD,OAAID,EAAKE,GAAGrE,kBAAmB,IAAM,EAC3CoE,EAAO,GAAD,OAAID,EAAKE,GAAGrE,kBAAmB,IAAMmE,EAAKE,GAAGE,qBAGnDH,EAAO,GAAD,OAAID,EAAKE,GAAGrE,kBAAqB,CAAC,EAAGmE,EAAKE,GAAGE,qBAKvD,IAAIC,EAAQ,GACZ,IAAI,IAAMC,KAAOL,EACF,iBAARK,IACHL,EAAOK,GAAOL,EAAOK,GAAK,GAAKL,EAAOK,GAAK,GAC3CD,EAAME,KAAK,CAACC,KAAMF,EAAKG,MAAOR,EAAOK,MAIzC,OAAOD,GAGEK,EAAgB,SAACV,GAG1B,IAFA,IAAIC,EAAS,GAELC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC3BD,EAAO,GAAD,OAAID,EAAKE,GAAGrE,kBACnBoE,EAAO,GAAD,OAAID,EAAKE,GAAGrE,mBAAsB,EAGxCoE,EAAO,GAAD,OAAID,EAAKE,GAAGrE,kBAAqB,EAK3C,IAAIwE,EAAQ,GACZ,IAAI,IAAMC,KAAOL,EACF,iBAARK,GACHD,EAAME,KAAK,CAACC,KAAMF,EAAKG,MAAOR,EAAOK,KAIzC,OAAOD,GAGGM,EAAwB,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,EAAGC,EAAoB,EAApBA,EAAGL,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAChD,OACE,uBAAMG,EAAGA,EAAGC,EAAGA,EAAG/C,SAAS,OAAOgD,KAAK,QAAQC,WAAW,SAASC,iBAAiB,UAApF,UACGR,EADH,KACWC,EAAMQ,QAAQ,OC/CzBC,EAAS,CAAC,UAAW,UAAU,UAAW,UAAW,WAyB5CC,EAvBE,SAAC9G,GAEhB,OACE,cAAC+G,EAAA,EAAD,CAAU7B,MAAO,IAAK8B,OAAQ,IAA9B,SACKhH,EAAM2F,KACP,cAACsB,EAAA,EAAD,CACItB,KAAM3F,EAAM2F,KACZuB,WAAW,EACXC,MAAOb,EACPc,YAAa,GACbX,KAAK,UACLY,QAAQ,QACRC,QAAQ,OACR3G,UAAU,MARd,SAUKX,EAAM2F,KAAKlD,KAAI,SAAC8E,EAAOC,GAAR,OACd,cAACC,EAAA,EAAD,CAA4BhB,KAAMI,EAAOW,EAAQX,EAAOf,SAAxD,eAAmB0B,SAEhB,Q,gFCQFE,EA7BE,SAAC,GAAkB,IAAjB/B,EAAgB,EAAhBA,KAAMgC,EAAU,EAAVA,KACfd,EAAS,CAAC,UAAW,UAAU,UAAW,UAAW,WAE3D,OACI,eAACe,EAAA,EAAD,CACI1C,MAAO,IACP8B,OAAQ,IACRrB,KAAMA,EACNkC,SAAU,EACVC,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,KAAM,EACNC,OAAQ,GAThB,UAYI,cAACC,EAAA,EAAD,CAAeC,gBAAiB,QAChC,cAACC,EAAA,EAAD,CAAOhB,QAAQ,cAAciB,SAAS,KAAKT,SAAU,EAAGU,KAAM,CAAC9E,SAAU,UACzE,cAAC+E,EAAA,EAAD,IACA,cAAC,IAAD,IACA,cAACC,EAAA,EAAD,CAAKpB,QAASM,EAAMe,QAAS,GAA7B,SACK/C,EAAKlD,KAAI,SAACkG,EAAUnB,GACjB,OAAO,cAACC,EAAA,EAAD,CAA4BhB,KAAMI,EAAOW,IAAzC,eAAmBA,aCzBjCoB,EAAW,SAACjD,GAIrB,IAFA,IAAIC,EAAS,GAELC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC3BD,EAAO,GAAD,OAAID,EAAKE,GAAGjE,8BACnBgE,EAAO,GAAD,OAAID,EAAKE,GAAGjE,6BAA8B,IAAM,EACtDgE,EAAO,GAAD,OAAID,EAAKE,GAAGjE,6BAA8B,IAAM+D,EAAKE,GAAGE,qBAG9DH,EAAO,GAAD,OAAID,EAAKE,GAAGjE,6BAAgC,CAAC,EAAG+D,EAAKE,GAAGE,qBAKlE,IAAIC,EAAQ,GACZ,IAAI,IAAMC,KAAOL,EACF,SAARK,IACAA,IACHL,EAAOK,GAAOL,EAAOK,GAAK,GAAKL,EAAOK,GAAK,IAC3CD,EAAME,KAAK,CAAC2C,YAAa5C,EAAK6C,MAAOlD,EAAOK,GAAKW,QAAQ,MAI7D,OAAOZ,GAKE+C,EAAc,SAACpD,GAIxB,IAFA,IAAIC,EAAS,GAELC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC3BD,EAAO,GAAD,OAAID,EAAKE,GAAGjE,8BACnBgE,EAAO,GAAD,OAAID,EAAKE,GAAGjE,6BAA8B,IAAM,EACtDgE,EAAO,GAAD,OAAID,EAAKE,GAAGjE,6BAA8B,IAAM+D,EAAKE,GAAGjD,UAG9DgD,EAAO,GAAD,OAAID,EAAKE,GAAGjE,6BAAgC,CAAC,EAAG+D,EAAKE,GAAGjD,UAKlE,IAAIoD,EAAQ,GACZ,IAAI,IAAMC,KAAOL,EACF,SAARK,IACHL,EAAOK,GAAOL,EAAOK,GAAK,GAAKL,EAAOK,GAAK,GAC3CD,EAAME,KAAK,CAAC2C,YAAa5C,EAAK+C,SAAUC,WAAWrD,EAAOK,GAAKW,QAAQ,OAI3E,OAAOZ,GCDIkD,EA5CQ,SAAC,GAAY,IAAXvD,EAAU,EAAVA,KAErB,OACI,qBAAK/E,GAAG,aAAR,SACK+E,EACG,eAACwD,EAAA,EAAD,CAAMC,WAAS,EAACzI,UAAU,kBAA1B,UACI,cAACwI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,eAACC,EAAA,EAAD,CAAO5I,UAAU,cAAc6I,UAAW,EAA1C,UACI,cAACC,EAAA,EAAD,CAAY9I,UAAU,cAAcO,QAAQ,YAA5C,kCAGJ,cAAC,EAAD,CAAUyE,KAAMU,EAAcV,UAGlC,cAACwD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,eAACC,EAAA,EAAD,CAAO5I,UAAU,cAAc6I,UAAW,EAA1C,UACI,cAACC,EAAA,EAAD,CAAY9I,UAAU,cAAcO,QAAQ,YAA5C,oCAGJ,cAAC,EAAD,CAAUyE,KAAMD,EAAgBC,UAGpC,cAACwD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,eAACC,EAAA,EAAD,CAAO5I,UAAU,cAAc6I,UAAW,EAA1C,UACI,cAACC,EAAA,EAAD,CAAY9I,UAAU,cAAcO,QAAQ,YAA5C,mCAGJ,cAAC,EAAD,CAAUyE,KAAMiD,EAASjD,GAAO+D,MAAM,cAAc/B,KAAK,eAG7D,cAACwB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,eAACC,EAAA,EAAD,CAAO5I,UAAU,cAAc6I,UAAW,EAA1C,UACI,cAACC,EAAA,EAAD,CAAY9I,UAAU,cAAcO,QAAQ,YAA5C,uCAGJ,cAAC,EAAD,CAAUyE,KAAMoD,EAAYpD,GAAO+D,MAAM,cAAc/B,KAAK,qBAItE,QCjBCgC,EAzBM,SAAC,GAAiD,IAAhD/I,EAA+C,EAA/CA,GAAI+D,EAA2C,EAA3CA,KAAMiF,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,YAAarH,EAAc,EAAdA,SACpD,OACI,cAACiC,EAAA,EAAD,CACEqF,gBAAgB,iBAChBC,eAAgB,CAAEhC,IAAK,IAAKE,KAAM,MAClCrH,GAAIA,EACJ+D,KAAMA,EACNiF,SAAUA,EACVhF,QAASiF,EACThF,aAAc,CACZI,SAAU,MACVF,WAAY,UAEdC,gBAAiB,CACfC,SAAU,MACVF,WAAY,UAbhB,SAkBE,cAAC,EAAD,CAAgBY,KAAMnD,OChB1BwH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,WAAY,CACVhF,QAAS+E,EAAME,QAAQ,IAEzB9E,KAAM,CACJ0B,OAAQ,MACR9B,MAAO,OAETR,QAAS,CACPQ,MAAO,MACP8B,OAAQ,WAqEGqD,EAjEC,SAACrK,GACf,IAAMsE,EAAU0F,IADS,EAEKM,oBAAS,GAFd,mBAElBC,EAFkB,KAETC,EAFS,OAGOF,mBAAS,MAHhB,mBAGlBV,EAHkB,KAGRa,EAHQ,OAKeH,oBAAS,GALxB,mBAKjBlK,EALiB,KAKJD,EALI,OAMqBmK,oBAAS,GAN9B,mBAMjBjK,EANiB,KAMDC,EANC,OAOegK,oBAAS,GAPxB,mBAOjB9J,EAPiB,KAOJD,EAPI,OAQmB+J,oBAAS,GAR5B,mBAQjB5J,EARiB,KAQFD,EARE,OAUa6J,oBAAS,GAVtB,mBAUjB/F,EAViB,KAULmG,EAVK,KA0BnBrG,EAAasG,QAAQpG,GACrBI,EAAOgG,QAAQf,GACfhJ,EAAK+D,EAAO,sBAAmBiG,EAEnC,OAEE,gCACI,cAAC,EAAD,CACEpI,SAAU9B,EAAcV,EAAMwC,SAASqI,QAAO,SAAAlF,GAAI,MAAqB,YAAjBA,EAAK3B,WAAuBhE,EAAMwC,SACxFpC,YAAaA,EACbC,eAAgBA,EAChBG,YAAaA,IAGb,cAAC,EAAD,CAAO6D,WAAYA,EAAYC,QAASA,EAASC,WAAYA,EAAYC,mBAlBxD,WACzBkG,GAAc,MAmBR,cAAC3J,EAAA,EAAD,CAAQJ,UAAU,iCAChBO,QAAQ,YACRD,MAAM,YACNsJ,QAASA,EACTvJ,QAjCW,SAAC8J,GACpBN,GAAW,SAACO,GAAD,OAAWA,KACtBN,EAAYK,EAAME,gBA2BZ,mCAQE,cAAC,EAAD,CAAcpK,GAAIA,EAAI+D,KAAMA,EAAMiF,SAAUA,EAAUC,YAhC5C,WAClBY,EAAY,OA+B4EjI,SAAUxC,EAAMwC,WACpG,cAAC,EAAD,CACIpC,YAAaA,EACbC,eAAgBA,EAChBG,YAAaA,EACbE,cAAeA,EACfP,eAAgBA,EAChBG,kBAAmBA,EACnBC,eAAgBA,EAChBE,iBAAkBA,QCpBfwK,MAvDf,WAAgB,IAAD,EACaX,mBAAS,IADtB,mBACL3E,EADK,KACCuF,EADD,KAGbC,qBAAU,WACRC,MANM,yrBAOLC,MAAK,SAAA1F,GAAI,OAAIA,EAAK2F,UAClBD,KAAKE,KACL,IAEH,IAAMA,EAAiB,SAACC,GACtB,IAAIC,EAAQD,EAASE,SAASjJ,KAAI,SAAAlB,GAAI,OAAIA,EAAKoK,cAC/CF,EAAMG,SAAQ,SAAArK,GACZA,EAAKwC,UAAY,IAAI8H,KAAKtK,EAAKuK,6BAA6BC,mBAAmB,SAC/ExK,EAAKyC,QAAUzC,EAAKyK,sBAEhB,IAAIH,KAAKtK,EAAKyK,uBAAuBD,mBAAmB,SAExD,UACJxK,EAAKqB,SAAWrB,EAAKyK,sBAEjBC,KAAKC,MAAM3K,EAAKyK,sBAAwBzK,EAAKuK,6BAAnC,OAEVG,KAAKC,MAAML,KAAKM,MAAQ5K,EAAKuK,6BAAnB,OACdvK,EAAKoB,MAAQpB,EAAKwE,oBAAoBa,QAAQ,GACP,gBAApCrF,EAAKK,6BACNL,EAAKK,2BAA6B,SAEC,gBAAlCL,EAAKM,2BACNN,EAAKM,yBAA2B,SAE7BN,EAAKC,iBAA4C,YAAzBD,EAAKC,kBAChCD,EAAKC,gBAAkB,gBAEY,mBAAjCD,EAAKG,yBAAiF,iBAAjCH,EAAKG,0BAC5DH,EAAKG,wBAA0B,MAEG,wBAAhCH,EAAKE,uBACPF,EAAKE,uBAAyB,eAES,sBAAhCF,EAAKE,wBAAmDF,EAAKG,0BACpEH,EAAKE,uBAAyB,SAGlCyJ,EAAQO,IAKV,OACI,qBAAK9K,UAAU,MAAf,SACE,cAAC,EAAD,CAAS6B,SAAUmD,OClD3ByG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fec894ae.chunk.js","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst ToggleContainer = (props) => {\n\n    const handleClick = (toggle) => {\n        switch(toggle) {\n            case \"acres\": \n                props.setAcresToggle(!props.acresToggle)\n                if (props.durationToggle) {\n                    props.setDurationToggle(!props.durationToggle)\n                }\n                break\n            case \"duration\":\n                props.setDurationToggle(!props.durationToggle)\n                if (props.acresToggle) {\n                    props.setAcresToggle(!props.acresToggle)\n                }\n                break\n            case \"cause\":\n                props.setCauseToggle(!props.causeToggle)\n                break\n            case \"ongoing\":\n                props.setOngoingToggle(!props.ongoingToggle)\n                break\n            default:\n                break\n        }\n    }\n\n    return (\n        <div className=\"map-element\" id=\"toggle-container\">\n            <Tooltip title=\"Size of fire varies depending on number of acres fire damaged.\" >\n                <Button \n                    onClick={() => handleClick(\"acres\")}\n                    color=\"secondary\" \n                    variant={props.acresToggle ? \"contained\" : \"outlined\"}\n                    className='map-filter-button'>\n                        Acres\n                </Button>\n            </Tooltip>\n            <Tooltip title=\"Size of fire varies depending on number of days fire lasted.\" >\n                <Button \n                    onClick={() => handleClick(\"duration\")}\n                    color=\"secondary\" \n                    variant={props.durationToggle ? \"contained\" : \"outlined\"} \n                    className='map-filter-button'>\n                        Duration\n                </Button>\n            </Tooltip>\n            <Tooltip title=\"Naturaly Caused: displayed with lightning, Human Caused: displayed with people\" >\n                <Button \n                    onClick={() => handleClick(\"cause\")}\n                    color=\"secondary\" \n                    variant={props.causeToggle ? \"contained\" : \"outlined\"}\n                    className='map-filter-button'>\n                        Cause\n                </Button>\n            </Tooltip>\n            <Tooltip title=\"Currently ongoing fires.\" >\n                <Button \n                    onClick={() => handleClick(\"ongoing\")}\n                    color=\"secondary\" \n                    variant={props.ongoingToggle ? \"contained\" : \"outlined\"} \n                    className='map-filter-button'>\n                        Ongoing\n                </Button>\n            </Tooltip>\n        </div>\n    )\n}\n\nexport default ToggleContainer\n","import React from 'react'\nimport { Icon } from 'leaflet';\nimport { MapContainer, TileLayer, Marker, Popup  } from 'react-leaflet'\n\nconst Map = (props) => {\n\n    const resizeIcon = (fire) => {\n      if(props.acresToggle) {\n        switch(true){\n          case fire.acres <= 2:\n            return 10\n          case fire.acres <= 20:\n            return 15\n          case fire.acres <= 100:\n            return 20\n          case fire.acres <= 1000:\n            return 30\n          case fire.acres <= 10000:\n            return 45\n          case fire.acres <= 50000:\n            return 60\n          default:\n            return 120\n        }\n      } else if (props.durationToggle) {\n        switch(true){\n          case fire.duration <= 5:\n            return 10\n          case fire.duration <= 15:\n            return 15\n          case fire.duration <= 30:\n            return 20\n          case fire.duration <= 50:\n            return 30\n          case fire.duration <= 100:\n            return 45\n          case fire.duration <= 365:\n            return 60\n          default:\n            return 80\n        }\n      } \n      else {\n        return 25\n      }\n    }\n    const setIcon = (cause) => {\n      if(props.causeToggle) {\n         switch(cause){\n            case 'Human':\n              return 'https://i.imgur.com/dH5n5DP.png'\n            case 'Natural':\n              return 'https://i.imgur.com/TTDwgZj.png'\n            default:\n              return 'https://i.imgur.com/F53W34b.png'\n         } \n      }\n      else {\n        return 'https://i.imgur.com/F53W34b.png'\n      }\n    }\n\n\n    const determineCause = (fire) => {\n      if (fire.irwin_FireCause && !fire.irwin_FireCauseGeneral) {\n        return fire.irwin_FireCause\n      }\n      else if (fire.irwin_FireCause && fire.irwin_FireCauseGeneral && !fire.irwin_FireCauseSpecific) {\n        return `${fire.irwin_FireCause} (${fire.irwin_FireCauseGeneral})`\n      }\n      else {\n        if (fire.irwin_FireCauseGeneral === \"Other Human Cause\") {\n          return `${fire.irwin_FireCause} (${fire.irwin_FireCauseSpecific})`\n        }\n\n        switch(fire.irwin_FireCauseSpecific) {\n          case \"Motor Vehicle\":\n            return `${fire.irwin_FireCause} (${fire.irwin_FireCauseSpecific})`\n          default:\n            return `${fire.irwin_FireCause} (${fire.irwin_FireCauseGeneral}, ${fire.irwin_FireCauseSpecific})`\n        }\n      }\n    }\n\n    const determineVegetation = (fire) => {\n      if (fire.irwin_PredominantFuelGroup && !fire.irwin_SecondaryFuelModel) {\n        return fire.irwin_PredominantFuelGroup\n      }\n      else {\n        return `${fire.irwin_PredominantFuelGroup}, ${fire.irwin_SecondaryFuelModel}`\n      }\n    }\n    const outerBounds = [\n      [20, -130],\n      [60, -70],\n    ]\n \n\n    return (\n     \n    <MapContainer \n      maxBounds={outerBounds}\n      center={[40, -100]} \n      zoom={5} \n      scrollWheelZoom={true} \n      maxZoom={10} \n      minZoom={4}>\n      <TileLayer\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n        {props.fireData.map(fire => {\n          const size = resizeIcon(fire)\n           const fireIcon = new Icon({\n            iconUrl: setIcon(fire.irwin_FireCause),\n            iconSize: [size, size]\n          })\n        if(fire.irwin_InitialLatitude === null || fire.irwin_InitialLongitude === null){\n          return null\n        }\n        return<Marker \n              icon = {fireIcon}\n              key = {fire.OBJECTID} \n              position={ [fire.irwin_InitialLatitude, fire.irwin_InitialLongitude ]}>\n          <Popup className=\"pop-up-css\">\n            <p style={{fontSize: '16px', textAlign: 'center', color: '#7f0000'}}><b>{fire.poly_IncidentName}</b></p>\n            <ul style={{fontSize: '14px'}}>\n            <li>\n              <b>Location: </b> {fire.irwin_POOCounty}, {fire.irwin_POOState.slice(-2)}\n            </li>\n            <li>\n              <b>Date: </b>\n              {fire.startDate} - {fire.endDate} ({fire.duration} {fire.duration === 1 ? \"day\" : \"days\"})\n            </li>\n            <li>\n              <b>Acres Burned: </b> \n              {fire.acres}\n            </li>\n            <li>\n              <b>Cause: </b> \n              {determineCause(fire)}\n            </li>\n            {fire.irwin_PredominantFuelGroup\n              ?\n                <li>\n                  <b>Vegetation: </b>\n                  {determineVegetation(fire)}\n                </li>\n              :\n                null\n            }\n            {fire.irwin_TotalIncidentPersonnel\n              ?\n                <li>\n                  <b>Firefighters: </b>\n                  {fire.irwin_TotalIncidentPersonnel}\n                </li>\n              :\n                null\n            }\n            {fire.irwin_POOLandownerKind\n              ?\n                <li>\n                  <b>Property: </b> {fire.irwin_POOLandownerKind}\n                </li>\n              :\n                null\n            }\n            </ul>\n            \n          </Popup>\n        </Marker>\n      })}\n        \n    </MapContainer>\n        \n    )\n}\n\nexport default Map\n","export default __webpack_public_path__ + \"static/media/forestfire.5e8871d5.png\";","import React from 'react'\n\nimport Logo from '../assets/forestfire.png'\nimport Popover from '@material-ui/core/Popover';\n\nconst About = ({openToggle, classes, toggleInfo, setToggleInfoClose }) => {\n    return (\n        <Popover\n            className={classes.infoBox} \n            open={openToggle}\n            toggleInfo={toggleInfo}\n            onClose={setToggleInfoClose}\n            anchorOrigin={{\n              verticle: \"top\", \n              horizontal: \"center\"\n            }}\n            transformOrigin={{\n              vertical: \"top\", \n              horizontal: \"center\"\n            }}\n            >\n            {/* <Paper className=\"site-info\">  */}\n            <div style={{width: '90%', padding: '40px'}}>\n\n            <center>\n              <img src={Logo} className={classes.logo}/> \n              <p style={{fontFamily: 'Roboto', fontSize: '14px'}}>\n              <p>Here is where you'll be able to check out all of the&nbsp;\n              <a href='https://data-nifc.opendata.arcgis.com/datasets/68637d248eb24d0d853342cba02d4af7_0?geometry=115.099%2C10.788%2C8.224%2C58.424' target='_blank'>\n              <b>NIFC fire data</b>\n              </a> \n              &nbsp;in the United States between the years 2020-2021. There have been over <b>16,000 fires</b> over <b>444,000 acres</b> and they just continue to grow more, and more each year! The public plays a valuable role in preventing wildfires. The national average of human-caused wildfires comprises <b>87 percent</b> of all wildfire occurrences every year. Most of these fires can be prevented. Preventable wildfires threaten lives, property, and our precious natural resources. Whether it is properly extinguishing a campfire or keeping your vehicle maintained to prevent sparks, following just a few simple steps can help prevent wildfires. Learn how to properly use outdoor equipment; burn debris safely; start, maintain, and extinguish a campfire; maintain a vehicle and tow safely; and practice fire-safe target shooting to name a few.\n              </p> \n              <p>\n              In many areas, May is Wildfire Awareness Month. As the weather becomes warmer, and wildland vegetation, or fuels, begin to dry out, it is time to plan for the wildfires. We can all help make the world a safer place by learning more about how and why wildfires start. From historical statistics, to the resources we use to put wildfires out, to ways to do your part to prevent wildfires, teaching people about wildfires is an important part of what we do.\n              </p>\n              <a href=\"https://www.ready.gov/wildfires\" target=\"Wildfires\">Steps on How to Prevent Forest Fires</a>\n              <br /> \n              <a href=\"https://wildfirerisk.org/reduce-risk/\" target=\"Reduce Risk\">How to Reduce Risks of Fires</a>\n              <br /> \n              <a href=\"https://www.readyforwildfire.org/prevent-wildfire/one-less-spark-campaign/\" target=\"One Less Spark\">One Less Spark, One Less Wildfire</a>\n              <br /> \n              <a href=\"https://smokeybear.com/en\" target=\"Smokey the Bear\">Only You Can Prevent Wildfires</a>\n              </p>\n            </center>\n          </div>\n            {/* </Paper> */}\n          </Popover>\n    )\n}\n\nexport default About\n\n","export const getAverageAcres = (data) => {\n    let object = {}\n    \n    for(let i = 0; i < data.length; i++){\n      if(object[`${data[i].irwin_FireCause}`]){\n        object[`${data[i].irwin_FireCause}`][0] += 1\n        object[`${data[i].irwin_FireCause}`][1] += data[i].poly_Acres_AutoCalc\n      }\n      else{\n        object[`${data[i].irwin_FireCause}`] = [1, data[i].poly_Acres_AutoCalc]\n      }\n    }\n\n\n    let array = []\n    for(const key in object){\n      if(!(key === \"Undetermined\")){\n        object[key] = object[key][1] / object[key][0]\n        array.push({name: key, value: object[key]})\n      }\n    }\n\n    return array\n}\n\nexport const getTotalFires = (data) => {\n    let object = {}\n    \n    for(let i = 0; i < data.length; i++){\n      if(object[`${data[i].irwin_FireCause}`]){\n        object[`${data[i].irwin_FireCause}`] += 1\n      }\n      else{\n        object[`${data[i].irwin_FireCause}`] = 1\n      }\n    }\n\n\n    let array = []\n    for(const key in object){\n      if(!(key === \"Undetermined\")){\n        array.push({name: key, value: object[key]})\n      }\n    }\n\n    return array\n}\n\nexport const  renderCustomizedLabel = ({x, y, name, value}) => {\n    return (\n      <text x={x} y={y} fontSize=\"12px\" fill=\"black\" textAnchor=\"middle\" dominantBaseline=\"central\">\n        {name}: {value.toFixed(2)}\n      </text>\n    );\n  };","import React from 'react'\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { renderCustomizedLabel} from '../helpers/piedata'\n\nconst COLORS = [\"#0088FE\", \"#FFBB28\",\"#00C49F\", \"#FF8042\", \"#225577\"];\n\nconst Piechart = (props) => {\n\n  return (\n    <PieChart width={300} height={300}>\n        {props.data ?\n        <Pie\n            data={props.data}\n            labelLine={true}\n            label={renderCustomizedLabel}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            nameKey=\"name\"\n            className=\"pie\"\n        >\n            {props.data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n        </Pie> : null}\n    </PieChart> \n    )\n}\n\nexport default Piechart\n","import React from 'react'\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Cell } from \"recharts\";\n\nconst Barchart = ({data, type}) => {\n    const COLORS = [\"#0088FE\", \"#FFBB28\",\"#00C49F\", \"#FF8042\", \"#225577\"];\n\n    return (\n        <BarChart\n            width={350}\n            height={250}\n            data={data}\n            interval={0}\n            margin={{\n                top: 50,\n                right: 70,\n                left: 0,\n                bottom: 0\n            }}\n            >\n            <CartesianGrid strokeDasharray={\"3 3\"} />\n            <XAxis dataKey=\"PrimaryFuel\" tickSize=\"10\" interval={0} tick={{fontSize: \"10px\"}}/>\n            <YAxis />\n            <Tooltip />\n            <Bar dataKey={type} barSize={20}>\n                {data.map((category, index) => {\n                    return <Cell key={`cell-${index}`} fill={COLORS[index]}/>\n                })}\n            </Bar>\n        </BarChart>\n    )\n}\n\nexport default Barchart\n","export const getAcres = (data) => {\n    \n    let object = {}\n    \n    for(let i = 0; i < data.length; i++){\n      if(object[`${data[i].irwin_PredominantFuelGroup}`]){\n        object[`${data[i].irwin_PredominantFuelGroup}`][0] += 1\n        object[`${data[i].irwin_PredominantFuelGroup}`][1] += data[i].poly_Acres_AutoCalc\n      }\n      else{\n        object[`${data[i].irwin_PredominantFuelGroup}`] = [1, data[i].poly_Acres_AutoCalc]\n      }\n    }\n\n\n    let array = []\n    for(const key in object){\n      if(!(key === \"null\")){\n        if(key)\n        object[key] = object[key][1] / object[key][0]\n        array.push({PrimaryFuel: key, Acres: object[key].toFixed(2)})\n      }\n    }\n\n    return array\n\n\n}\n\nexport const getDuration = (data) => {\n\n    let object = {}\n    \n    for(let i = 0; i < data.length; i++){\n      if(object[`${data[i].irwin_PredominantFuelGroup}`]){\n        object[`${data[i].irwin_PredominantFuelGroup}`][0] += 1\n        object[`${data[i].irwin_PredominantFuelGroup}`][1] += data[i].duration\n      }\n      else{\n        object[`${data[i].irwin_PredominantFuelGroup}`] = [1, data[i].duration]\n      }\n    }\n\n\n    let array = []\n    for(const key in object){\n      if(!(key === \"null\")){\n        object[key] = object[key][1] / object[key][0]\n        array.push({PrimaryFuel: key, Duration: parseFloat(object[key].toFixed(2))})\n      }\n    }\n\n    return array\n}\n\n// const data = [\n//     {\n//       name: \"Page A\",\n//       acres: 4000,\n//       duration: 2400\n//     },\n//     {\n//       name: \"Page B\",\n//       acres: 3000,\n//       duration: 1398\n//     },\n//     {\n//       name: \"Page C\",\n//       acres: 2000,\n//       duration: 9800\n//     },\n//     {\n//       name: \"Page D\",\n//       acres: 2780,\n//       duration: 3908\n//     },\n//     {\n//       name: \"Page E\",\n//       acres: 1890,\n//       duration: 4800\n//     },\n//     {\n//       name: \"Page F\",\n//       acres: 2390,\n//       duration: 3800\n//     },\n//     {\n//       name: \"Page G\",\n//       acres: 3490,\n//       duration: 4300\n//     }\n//   ];","import React from 'react'\nimport Piechart from '../components/Piechart'\nimport { getAverageAcres, getTotalFires} from '../helpers/piedata'\nimport { Grid, Typography, Paper } from '@material-ui/core'\nimport Barchart from '../components/Barchart'\nimport { getAcres, getDuration } from '../helpers/bardata'\n\nconst GraphContainer = ({data}) => {\n\n    return (\n        <div id=\"graph-page\">\n            {data ? \n                <Grid container className=\"graph-container\">\n                    <Grid item xs={3}>\n                        <Paper className=\"graph-paper\" elevation={3}>\n                            <Typography className=\"graph-title\" variant=\"subtitle1\">\n                                Total Fires by Cause\n                            </Typography>\n                        <Piechart data={getTotalFires(data)} />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Paper className=\"graph-paper\" elevation={3}>\n                            <Typography className=\"graph-title\" variant=\"subtitle1\">\n                                Average Acres by Cause\n                            </Typography>\n                        <Piechart data={getAverageAcres(data)} /> \n                        </Paper>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Paper className=\"graph-paper\" elevation={3}>\n                            <Typography className=\"graph-title\" variant=\"subtitle1\">\n                                Average Acres by Fuel\n                            </Typography>\n                        <Barchart data={getAcres(data)} xaxis=\"PrimaryFuel\" type=\"Acres\"/>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Paper className=\"graph-paper\" elevation={3}>\n                            <Typography className=\"graph-title\" variant=\"subtitle1\">\n                                Average Duration by Cause\n                            </Typography>\n                        <Barchart data={getDuration(data)} xaxis=\"PrimaryFuel\" type=\"Duration\"/>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            : null}\n        </div>\n    )\n}\n\nexport default GraphContainer\n","import React from 'react'\nimport Popover from '@material-ui/core/Popover';\nimport GraphContainer from '../containers/GraphContainer';\n\nconst GraphOverlay = ({id, open, anchorEl, handleClose, fireData}) => {\n    return (\n        <Popover\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{ top: 600, left: 1250}}\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          {/* <Typography className={classes.typography}>The content of the Popover.</Typography>\n          */}\n          <GraphContainer data={fireData}/> \n        </Popover>\n    )\n}\n\nexport default GraphOverlay\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ToggleContainer from './ToggleContainer.js'\nimport Map from '../components/Map.js'\nimport About from \"../components/About.js\";\nimport GraphOverlay from \"../components/GraphOverlay.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(1),\n  },\n  logo: {\n    height: '20%', \n    width: '20%', \n  },\n  infoBox: {\n    width: \"75%\",\n    height: \"75%\"\n  }\n}));\n\nconst MapPage = (props) => {\n  const classes = useStyles()\n  const [checked, setChecked] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [ acresToggle, setAcresToggle ] = useState(false)\n  const [ durationToggle, setDurationToggle ] = useState(false)\n  const [ causeToggle, setCauseToggle ] = useState(false)\n  const [ ongoingToggle, setOngoingToggle ] = useState(false)\n\n  const [ toggleInfo, setToggleInfo ] = useState(true)\n\n\n  const handleChange = (event) => {\n    setChecked((prev) => !prev);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const setToggleInfoClose = () => {\n    setToggleInfo(false) \n  }\n\n  const openToggle = Boolean(toggleInfo);\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n    return (\n\n      <div>\n          <Map\n            fireData={ongoingToggle?props.fireData.filter(data => data.endDate === 'present'):props.fireData}\n            acresToggle={acresToggle}\n            durationToggle={durationToggle}\n            causeToggle={causeToggle}\n          />\n\n            <About openToggle={openToggle} classes={classes} toggleInfo={toggleInfo} setToggleInfoClose={setToggleInfoClose}/>\n\n          <Button className=\"graph-button map-filter-button\"\n            variant=\"contained\" \n            color=\"secondary\"\n            checked={checked}\n            onClick={handleChange}>\n                Check out the graphs!\n          </Button>\n\n            <GraphOverlay id={id} open={open} anchorEl={anchorEl} handleClose={handleClose} fireData={props.fireData}/>\n        <ToggleContainer\n            acresToggle={acresToggle}\n            durationToggle={durationToggle}\n            causeToggle={causeToggle}\n            ongoingToggle={ongoingToggle}\n            setAcresToggle={setAcresToggle}\n            setDurationToggle={setDurationToggle}\n            setCauseToggle={setCauseToggle}\n            setOngoingToggle={setOngoingToggle}\n        />\n      </div>\n    );\n}\n\nexport default MapPage\n","import './App.css';\nimport { useEffect, useState } from 'react'\nimport MapPage from './containers/MapPage.js'\n\nlet url = 'https://services3.arcgis.com/T4QMspbfLg3qTGWY/arcgis/rest/services/Fire_History_Perimeters_Public/FeatureServer/0/query?where=1%3D1&outFields=OBJECTID,poly_IncidentName,irwin_DailyAcres,irwin_FireBehaviorGeneral1,irwin_FireCause,irwin_FireCauseGeneral,irwin_FireCauseSpecific,irwin_FireDiscoveryDateTime,irwin_FireMgmtComplexity,irwin_FireOutDateTime,irwin_IncidentTypeCategory,irwin_InitialLatitude,irwin_InitialLongitude,irwin_POOState,irwin_PredominantFuelGroup,irwin_SecondaryFuelModel,irwin_TotalIncidentPersonnel,poly_Acres_AutoCalc,irwin_FireBehaviorGeneral2,irwin_FireBehaviorGeneral3,irwin_POOCounty,irwin_POOLandownerKind,irwin_PrimaryFuelModel&returnGeometry=false&outSR=4326&f=json'\n\nfunction App() {\n  const [ data, setData ] = useState([])\n\n  useEffect(() => {\n    fetch(url)\n    .then(data => data.json())\n    .then(handleResponse)\n  }, [])\n\n  const handleResponse = (response) => {\n    let fires = response.features.map(fire => fire.attributes)\n    fires.forEach(fire => {\n      fire.startDate = new Date(fire.irwin_FireDiscoveryDateTime).toLocaleDateString(\"en-US\")\n      fire.endDate = fire.irwin_FireOutDateTime\n        ?\n          new Date(fire.irwin_FireOutDateTime).toLocaleDateString(\"en-US\")\n        :\n          \"present\"\n      fire.duration = fire.irwin_FireOutDateTime\n        ?\n          Math.ceil((fire.irwin_FireOutDateTime - fire.irwin_FireDiscoveryDateTime) / (60*60*24*1000))\n        :\n          Math.ceil((Date.now() - fire.irwin_FireDiscoveryDateTime) / (60*60*24*1000))\n      fire.acres = fire.poly_Acres_AutoCalc.toFixed(2)\n      if(fire.irwin_PredominantFuelGroup === \"Grass-Shrub\"){\n        fire.irwin_PredominantFuelGroup = \"Shrub\"\n      }\n      if(fire.irwin_SecondaryFuelModel === \"Grass-Shrub\"){\n        fire.irwin_SecondaryFuelModel = \"Shrub\"\n      }\n      if (!fire.irwin_FireCause || fire.irwin_FireCause === \"Unknown\") {\n        fire.irwin_FireCause = \"Undetermined\"\n      }\n      if (fire.irwin_FireCauseSpecific === \"Other, Unknown\" || fire.irwin_FireCauseSpecific === \"Other, Known\") {\n        fire.irwin_FireCauseSpecific = null\n      }\n      if (fire.irwin_FireCauseGeneral === \"Debris/Open Burning\") {\n        fire.irwin_FireCauseGeneral = \"Open Burning\"\n      }\n      else if (fire.irwin_FireCauseGeneral === \"Other Human Cause\" && !fire.irwin_FireCauseSpecific) {\n        fire.irwin_FireCauseGeneral = null\n      }\n    })\n    setData(fires)\n  }\n\n\n\n  return (\n      <div className=\"App\"> \n        <MapPage fireData={data} />\n      </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}